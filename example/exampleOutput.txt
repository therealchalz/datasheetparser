/* --- USART_CR1 values ----------------------------------------------------- */
/** @defgroup usart_cr1_values USART_CR1 values
@{*/

/** M1: Word length */
#define USART_CR1_M1			(1 << 28)

/** EOBIE: End of Block interrupt enable */
#define USART_CR1_EOBIE			(1 << 27)

/** RTOIE: Receiver timeout interrupt enable */
#define USART_CR1_RTOIE			(1 << 26)

/** DEAT[4:0]: Driver Enable assertion time */
#define USART_CR1_DEAT_MASK		(0x1F << 21)

/** DEDT[4:0]: Driver Enable de-assertion time */
#define USART_CR1_DEDT_MASK		(0x1F << 16)

/** OVER8: Oversampling mode */
#define USART_CR1_OVER8			(1 << 15)

/** CMIE: Character match interrupt enable */
#define USART_CR1_CMIE			(1 << 14)

/** MME: Mute mode enable */
#define USART_CR1_MME			(1 << 13)

/** M0: Word length */
#define USART_CR1_M0			(1 << 12)

/** WAKE: Receiver wakeup method */
#define USART_CR1_WAKE			(1 << 11)

/** PCE: Parity control enable */
#define USART_CR1_PCE			(1 << 10)

/** PS: Parity selection */
#define USART_CR1_PS			(1 << 9)

/** PEIE: PE interrupt enable */
#define USART_CR1_PEIE			(1 << 8)

/** TXEIE: interrupt enable */
#define USART_CR1_TXEIE			(1 << 7)

/** TCIE: Transmission complete interrupt enable */
#define USART_CR1_TCIE			(1 << 6)

/** RXNEIE: RXNE interrupt enable */
#define USART_CR1_RXNEIE		(1 << 5)

/** IDLEIE: IDLE interrupt enable */
#define USART_CR1_IDLEIE		(1 << 4)

/** TE: Transmitter enable */
#define USART_CR1_TE			(1 << 3)

/** RE: Receiver enable */
#define USART_CR1_RE			(1 << 2)

/** UESM: USART enable in Stop mode */
#define USART_CR1_UESM			(1 << 1)

/** UE: USART enable */
#define USART_CR1_UE			(1 << 0)

/**@}*/

/* --- USART_CR2 values ----------------------------------------------------- */
/** @defgroup usart_cr2_values USART_CR2 values
@{*/

/** ADD[7:4]: Address of the USART node */
#define USART_CR2_ADD_MASK		(0xF << 28)

/** ADD[3:0]: Address of the USART node */
/*************************************************
** Fixme: Duplicate bit name in this register ****
*************************************************/
#define USART_CR2_ADD_MASK		(0xF << 24)

/** RTOEN: Receiver timeout enable */
#define USART_CR2_RTOEN			(1 << 23)

/** ABRMOD[1:0]: Auto baud rate mode */
#define USART_CR2_ABRMOD_MASK		(0x3 << 21)

/** ABREN: Auto baud rate enable */
#define USART_CR2_ABREN			(1 << 20)

/** MSBFIRST: Most significant bit first */
#define USART_CR2_MSBFIRST		(1 << 19)

/** DATAINV: Binary data inversion */
#define USART_CR2_DATAINV		(1 << 18)

/** TXINV: TX pin active level inversion */
#define USART_CR2_TXINV			(1 << 17)

/** RXINV: RX pin active level inversion */
#define USART_CR2_RXINV			(1 << 16)

/** SWAP: Swap TX/RX pins */
#define USART_CR2_SWAP			(1 << 15)

/** LINEN: LIN mode enable */
#define USART_CR2_LINEN			(1 << 14)

/** STOP[1:0]: STOP bits */
#define USART_CR2_STOP_MASK		(0x3 << 12)

/** CLKEN: Clock enable */
#define USART_CR2_CLKEN			(1 << 11)

/** CPOL: Clock polarity */
#define USART_CR2_CPOL			(1 << 10)

/** CPHA: Clock phase */
#define USART_CR2_CPHA			(1 << 9)

/** LBCL: Last bit clock pulse */
#define USART_CR2_LBCL			(1 << 8)

/** LBDIE: LIN break detection interrupt enable */
#define USART_CR2_LBDIE			(1 << 6)

/** LBDL: LIN break detection length */
#define USART_CR2_LBDL			(1 << 5)

/** ADDM7: 7-bit Address Detection/4-bit Address Detection */
#define USART_CR2_ADDM7			(1 << 4)

/**@}*/

/* --- USART_CR3 values ----------------------------------------------------- */
/** @defgroup usart_cr3_values USART_CR3 values
@{*/

/** TCBGTIE: Transmission complete before guard time interrupt enable */
#define USART_CR3_TCBGTIE		(1 << 24)

/** UCESM: USART Clock Enable in Stop mode. */
#define USART_CR3_UCESM			(1 << 23)

/** WUFIE: Wakeup from Stop mode interrupt enable */
#define USART_CR3_WUFIE			(1 << 22)

/** WUS[1:0]: Wakeup from Stop mode interrupt flag selection */
#define USART_CR3_WUS_MASK		(0x3 << 20)

/** SCARCNT[2:0]: Smartcard auto-retry count */
#define USART_CR3_SCARCNT_MASK		(0x7 << 17)

/** must: Bit16 Reserved, must be kept at reset value. */
#define USART_CR3_must			(1 << Reserved,)

/** DEP: Driver enable polarity selection */
#define USART_CR3_DEP			(1 << 15)

/** DEM: Driver enable mode */
#define USART_CR3_DEM			(1 << 14)

/** DDRE: DMA Disable on Reception Error */
#define USART_CR3_DDRE			(1 << 13)

/** OVRDIS: Overrun Disable */
#define USART_CR3_OVRDIS		(1 << 12)

/** ONEBIT: One sample bit method enable */
#define USART_CR3_ONEBIT		(1 << 11)

/** CTSIE: CTS interrupt enable */
#define USART_CR3_CTSIE			(1 << 10)

/** CTSE: CTS enable */
#define USART_CR3_CTSE			(1 << 9)

/** RTSE: RTS enable */
#define USART_CR3_RTSE			(1 << 8)

/** DMAT: DMA enable transmitter */
#define USART_CR3_DMAT			(1 << 7)

/** DMAR: DMA enable receiver */
#define USART_CR3_DMAR			(1 << 6)

/** SCEN: Smartcard mode enable */
#define USART_CR3_SCEN			(1 << 5)

/** NACK: Smartcard NACK enable */
#define USART_CR3_NACK			(1 << 4)

/** HDSEL: Half-duplex selection */
#define USART_CR3_HDSEL			(1 << 3)

/** IRLP: IrDA low-power */
#define USART_CR3_IRLP			(1 << 2)

/** IREN: IrDA mode enable */
#define USART_CR3_IREN			(1 << 1)

/** EIE: Error interrupt enable */
#define USART_CR3_EIE			(1 << 0)

/**@}*/

/* --- USART_BRR values ----------------------------------------------------- */
/** @defgroup usart_brr_values USART_BRR values
@{*/

/** BRR[15:4]: 4] */
#define USART_BRR_BRR_MASK		(0xFFF << 4)

/** BRR[3:0]: 0] */
/*************************************************
** Fixme: Duplicate bit name in this register ****
*************************************************/
#define USART_BRR_BRR_MASK		(0xF << 0)

/**@}*/

/* --- USART_GTPR values ----------------------------------------------------- */
/** @defgroup usart_gtpr_values USART_GTPR values
@{*/

/** GT[7:0]: Guard time value */
#define USART_GTPR_GT_MASK		(0xFF << 8)

/** PSC[7:0]: Prescaler value */
#define USART_GTPR_PSC_MASK		(0xFF << 0)

/**@}*/

/* --- USART_RTOR values ----------------------------------------------------- */
/** @defgroup usart_rtor_values USART_RTOR values
@{*/

/** BLEN[7:0]: Block Length */
#define USART_RTOR_BLEN_MASK		(0xFF << 24)

/** RTO[23:0]: Receiver timeout value */
#define USART_RTOR_RTO_MASK		(0xFFFFFF << 0)

/**@}*/

/* --- USART_RQR values ----------------------------------------------------- */
/** @defgroup usart_rqr_values USART_RQR values
@{*/

/** TXFRQ: Transmit data flush request */
#define USART_RQR_TXFRQ			(1 << 4)

/** RXFRQ: Receive data flush request */
#define USART_RQR_RXFRQ			(1 << 3)

/** MMRQ: Mute mode request */
#define USART_RQR_MMRQ			(1 << 2)

/** SBKRQ: Send break request */
#define USART_RQR_SBKRQ			(1 << 1)

/** ABRRQ: Auto baud rate request */
#define USART_RQR_ABRRQ			(1 << 0)

/**@}*/

/* --- USART_ISR values ----------------------------------------------------- */
/** @defgroup usart_isr_values USART_ISR values
@{*/

/** TCBGT: Transmission complete before guard time completion. */
#define USART_ISR_TCBGT			(1 << 25)

/** REACK: Receive enable acknowledge flag */
#define USART_ISR_REACK			(1 << 22)

/** TEACK: Transmit enable acknowledge flag */
#define USART_ISR_TEACK			(1 << 21)

/** WUF: Wakeup from Stop mode flag */
#define USART_ISR_WUF			(1 << 20)

/** RWU: Receiver wakeup from Mute mode */
#define USART_ISR_RWU			(1 << 19)

/** SBKF: Send break flag */
#define USART_ISR_SBKF			(1 << 18)

/** CMF: Character match flag */
#define USART_ISR_CMF			(1 << 17)

/** BUSY: Busy flag */
#define USART_ISR_BUSY			(1 << 16)

/** ABRF: Auto baud rate flag */
#define USART_ISR_ABRF			(1 << 15)

/** ABRE: Auto baud rate error */
#define USART_ISR_ABRE			(1 << 14)

/** EOBF: End of block flag */
#define USART_ISR_EOBF			(1 << 12)

/** RTOF: Receiver timeout */
#define USART_ISR_RTOF			(1 << 11)

/** CTS: CTS flag */
#define USART_ISR_CTS			(1 << 10)

/** CTSIF: CTS interrupt flag */
#define USART_ISR_CTSIF			(1 << 9)

/** LBDF: LIN break detection flag */
#define USART_ISR_LBDF			(1 << 8)

/** TXE: Transmit data register empty */
#define USART_ISR_TXE			(1 << 7)

/** TC: Transmission complete */
#define USART_ISR_TC			(1 << 6)

/** RXNE: Read data register not empty */
#define USART_ISR_RXNE			(1 << 5)

/** IDLE: Idle line detected */
#define USART_ISR_IDLE			(1 << 4)

/** ORE: Overrun error */
#define USART_ISR_ORE			(1 << 3)

/** NF: START bit Noise detection flag */
#define USART_ISR_NF			(1 << 2)

/** FE: Framing error */
#define USART_ISR_FE			(1 << 1)

/** PE: Parity error */
#define USART_ISR_PE			(1 << 0)

/**@}*/

/* --- USART_ICR values ----------------------------------------------------- */
/** @defgroup usart_icr_values USART_ICR values
@{*/

/** WUCF: Wakeup from Stop mode clear flag */
#define USART_ICR_WUCF			(1 << 20)

/** CMCF: Character match clear flag */
#define USART_ICR_CMCF			(1 << 17)

/** EOBCF: End of block clear flag */
#define USART_ICR_EOBCF			(1 << 12)

/** RTOCF: Receiver timeout clear flag */
#define USART_ICR_RTOCF			(1 << 11)

/** CTSCF: CTS clear flag */
#define USART_ICR_CTSCF			(1 << 9)

/** LBDCF: LIN break detection clear flag */
#define USART_ICR_LBDCF			(1 << 8)

/** TCBGTCF: Transmission completed before guard time clear flag */
#define USART_ICR_TCBGTCF		(1 << 7)

/** TCCF: Transmission complete clear flag */
#define USART_ICR_TCCF			(1 << 6)

/** IDLECF: Idle line detected clear flag */
#define USART_ICR_IDLECF		(1 << 4)

/** ORECF: Overrun error clear flag */
#define USART_ICR_ORECF			(1 << 3)

/** NCF: Noise detected clear flag */
#define USART_ICR_NCF			(1 << 2)

/** FECF: Framing error clear flag */
#define USART_ICR_FECF			(1 << 1)

/** PECF: Parity error clear flag */
#define USART_ICR_PECF			(1 << 0)

/**@}*/

/* --- USART_RDR values ----------------------------------------------------- */
/** @defgroup usart_rdr_values USART_RDR values
@{*/

/** RDR[8:0]: Receive data value */
#define USART_RDR_RDR_MASK		(0x1FF << 0)

/**@}*/

/* --- USART_TDR values ----------------------------------------------------- */
/** @defgroup usart_tdr_values USART_TDR values
@{*/

/** TDR[8:0]: Transmit data value */
#define USART_TDR_TDR_MASK		(0x1FF << 0)

/**@}*/


